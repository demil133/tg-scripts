#!/usr/bin/expect

# Gloval variables
set user "admin"
set terminator "response"
set folder ""
set prompt "> "

switch -- [llength $argv] {
    1 { 
        set user [lindex $argv 0]
    }
    2 { 
        set user [lindex $argv 0]
        set folder [lindex $arg 1]
    }
    0 {
    }
    default {
        send_user "Usage: ./telegram-daemon <username>\n"
        send_user "Usage: ./telegram-daemon <username> <telegram/folder/>\n"
        exit 1
    }
}
send_user "Using telegram-folder: $folder"

# Remove ansi escape sequences
proc un_ansi {data} {
    set txt {}
    while {[string length ${data}]} {
        set match { }
        switch -regexp -- ${data} {
            {^\x1b(\[|\(|\))[;?0-9]*[0-9A-Za-z]} {
                regexp -- {^\x1b(\[|\(|\))[;?0-9]*[0-9A-Za-z]} ${data} match
            }
            {^(.+?)\x1b} {
                regexp -- {^(.+?)\x1b} ${data} UNUSED match
                # handle special escape sequences
                regsub -all -- {\\([\\\[\]])} ${match} {\1} raw_match
                append txt ${raw_match}
            }
            {^\x1b} {
                # do nothing
            }
            default {
                set match ${data}
                append txt ${match}
            }
        }
        set data [string range ${data} [string length ${match}] end]
    }
    # remove white spaces not needed anymore
    regsub -all -- "\t+" ${txt} { } txt
    regsub -all -- " +" ${txt} { } txt
    regsub -all -nocase -- "\n+" [string trim ${txt}] "\n" txt
    return ${txt}
}

spawn ${folder}telegram

while true {
    expect {

        "Telegram-client" {
            sleep 2
            send "msg Daniel_IÃ±igo Telegram started\r"
            expect "Sent:*\r"
        }

        # When it receives a message
        -re {\[\d{2}:\d{2}\].*>>>.*\n} {
            set line [un_ansi $expect_out(0,string)]]
            # Get the user
            regexp -- {\[\d{2}:\d{2}\].*>>>} $line user
            regsub -all -- {\[\d{2}:\d{2}\]\s|\s>>>} $user {} user
            regsub -all -- {\s} $user "_" user
            # Get the command
            regexp -- {>>>.*$} $line command
            regsub -all -- {>>>\s|\]$|\r.*} $command {} command
            # Execute
            send "mark_read $user\r"
            send "$command\r"
            if {$line == "quit"} {
                exit 0
            }
            sleep 1
            send "$terminator\r"
            expect "${prompt}${command}\r"
        }

        # For any other line that's not a sent message
        "$terminator\r" {
            set line [string trim $expect_out(buffer)]
            set line [un_ansi $line]
#            send [un_ansi $expect_out(0,string)]
            set line [string trimright $line "$terminator\r"]]
            set lines_list [split $line "\r"]
            set lines_list [lrange $lines_list 0 [expr [llength $lines_list] - 2]]
            expect $prompt
            foreach message $lines_list {
                set message [string trim $message]
                # Filter feedbacfeedback
                if {[string first "messages marked as read" $message] == -1} {
                if {[string first "*** t =" $message] == -1} {
                if {[string first "<<<" $message] == -1} {
                if {[string first "User*is now o*line" $message] == -1} {
                if {$message != ">"} {
                    send "msg $user $message\r"
                    expect "Sent:.*\n"
                }
                }
                }
                }
                }
            }
        }
    }
}
send "quit\r"
expect eof
