#!/usr/bin/expect
set user "admin"
set terminator "response"
set folder "/etc/telegram"

switch -- [llength $argv] {
    1 { 
        set user [lindex $argv 0]
    }
    2 { 
        set user [lindex $argv 0]
        set folder [lindex $arg 1]
    }
    default {
        send_user "Usage: ./telegram-daemon <username>\n"
        send_user "Usage: ./telegram-daemon <username> <telegram/folder>\n"
        exit 1
    }
}
send_user "Using telegram-folder: $folder"
    
if {[llength $argv] == 2} {
    
}
# Remove ansi escape sequences
proc un_ansi {data} {
    set txt {}
    while {[string length ${data}]} {
        set match { }
        switch -regexp -- ${data} {
            {^\x1b(\[|\(|\))[;?0-9]*[0-9A-Za-z]} {
                regexp -- {^\x1b(\[|\(|\))[;?0-9]*[0-9A-Za-z]} ${data} match
            }
            {^(.+?)\x1b} {
                regexp -- {^(.+?)\x1b} ${data} UNUSED match
                # handle special escape sequences
                regsub -all -- {\\([\\\[\]])} ${match} {\1} raw_match
                append txt ${raw_match}
            }
            {^\x1b} {
                # do nothing
            }
            default {
                set match ${data}
                append txt ${match}
           }
       }
       set data [string range ${data} [string length ${match}] end]
   }

   # remove white spaces not needed anymore
   regsub -all -- "\t+" ${txt} { } txt
   regsub -all -- " +" ${txt} { } txt
   regsub -all -nocase -- "\n+" [string trim ${txt}] "\n" txt
   return ${txt}
 }

spawn $folder/telegram -k $folder/tg-server.pub

while true {

	expect {

		# When the program begins
		"Telegram-client*\r" {
			sleep 1
			expect "User"
			send "msg $user Starting Telegram\r"
			expect "Sent:"
		}

		# When it receives a message
		">>>*\r" {
			send "mark_read $user\r"
			send "RECEIVED MESSAGE\r"
			set line [lindex [split $expect_out(0,string) "\r"] 0]
			set line [string trim $line]
			set line [string trimleft $line  ">>>"]
			set line [string trimright $line "m" ]	
			set line [string trim $line]
			if {$line == "quit"} {
				exit 0
			}
			expect "Sent:"
			send "$line\r"
            expect ">"
            sleep 0.5
			send "$terminator\r"
		}

		# For any other line that's not a sent message
		"$terminator\r" {
			set line [string trim $expect_out(buffer)]
            set line [un_ansi $line]
			set line [string trim $line]
			set line [string trimright $line "$terminator\r"]]
			set lines_list [split $line "\r"]
			set lines_list [lrange $lines_list 2 [expr [llength $lines_list] - 2]]
            expect "> "
            foreach message $lines_list {
                if {[string first "messages marked as read" $message] == -1} {
                    set message [string trim $message]
                    send "msg $user $message\r"
                    expect "Sent:"
                }
            }
		}
	}
}
send "quit\r"
expect eof
